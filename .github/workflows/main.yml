name: Build a Docker image and Push it to ACR

on:
  push:
    branches: main
  pull_request:
    branches: main

  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      
      - uses: azure/docker-login@v1
        with:
          login-server: acrgithub.azurecr.io
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}
      - name: build and push voting app
        run: |
          docker build ./vote/ -t acrgithub.azurecr.io/vote:${{ github.sha }}
          docker push acrgithub.azurecr.io/vote:${{ github.sha }}

      - name: build and push result app
        run: |
          docker build ./result/ -t acrgithub.azurecr.io/result:${{ github.sha }}
          docker push acrgithub.azurecr.io/result:${{ github.sha }}

      - name: build and push worker app
        run: |
          docker build ./worker/ -t acrgithub.azurecr.io/worker:${{ github.sha }}
          docker push acrgithub.azurecr.io/worker:${{ github.sha }}
      - name: Get AKS credentials
        env:
          CLUSTER_RESOURCE_GROUP_NAME: ${{ secrets.CLUSTER_RESOURCE_GROUP_NAME }}
          CLUSTER_NAME: ${{ secrets.CLUSTER_NAME }}
        run: |
          az login \
                --service-principal \
                --username ${{ secrets.SERVICE_PRINCIPAL_APP_ID }} \
                --password ${{ secrets.SERVICE_PRINCIPAL_SECRET }} \
                --tenant ${{ secrets.SERVICE_PRINCIPAL_TENANT }}
          az acr login --name ${{ secrets.ACR_NAME }}
          az aks get-credentials \
            --resource-group ${{ secrets.CLUSTER_RESOURCE_GROUP_NAME }} \
            --name ${{ secrets.CLUSTER_NAME }} \
            --overwrite-existing
      - name: Deploy application
        env:
          ACR_NAME: ${{ secrets.ACR_NAME }}
        run: |
          kubectl get pods -n vote
